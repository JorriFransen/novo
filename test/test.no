
// TODO:
//  - Pointers
//  - Foreign functions (call printf)
//  - Builtin string type
//  - #run
//  - #insert

//  - Global variables
//  - Constant variables
//  - Basic control flow
//      - switch
//      - defer
//  - Nested function declarations

//  - Keyword tokens should be associated with some enum so the parser can switch on this instead of using if-else chains
//  - Redo linear allocator to have blocks
//  - Capture errors, and check for them in tests


Vec :: struct {
    x: s64;
    y: s64;
}

add_y :: (v: *Vec, y: s64) {
    v.y += y;
}

main :: () -> s64 {

    v: Vec = { 1, 2 };

    vptr := *v;
    yptr := *v.y;

    vptr.x *= 2;
    <yptr *= 3;

    v2 := <vptr;
    add_y(*v2, 3);

    return vptr.x + vptr.y + v2.x + v2.y;
}
