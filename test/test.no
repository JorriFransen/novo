// TODO:

//  - // AST_DECL_FLAG_STORAGE_REQUIRED is only used for arguments/parameters?

//  - Constant variables (aggregates)
//  - Basic control flow
//      - switch
//      - defer
//  - Nested function declarations
//  - Cleanup error reporting
//      - seperate creating and submission, this should be cleaner (eg. in valid_cast())

//  - Keyword tokens should be associated with some enum so the parser can switch on this instead of using if-else chains
//  - Redo linear allocator to have blocks
//  - Capture errors, and check for them in tests


// putchar :: (char: s32) -> s32 #foreign;
// puts :: (str: *u8) -> s32 #foreign;
// foreign_add :: (a: s64, b: s64) -> s32 #foreign;
// printf :: (format: *u8, ..) -> s32 #foreign;
// malloc :: (size: s64) -> *void #foreign;
// free :: (ptr: *void) -> void #foreign;


ret_x :: (x: s64) -> int { return x; }
add :: (a: s64, b: s64) -> s64 { return a + b; }

main :: () -> s64 {

    // printf("Hello, World!".data);

    return ret_x(42);
}


// #run main();
