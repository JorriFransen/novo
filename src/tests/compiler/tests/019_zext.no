
main :: () -> int {
    unsigned_signed();
    unsigned_unsigned();
    return 0;
}

unsigned_signed :: () {

    {
        x : u8 = 0xEB;
        xx := cast(s16, x);
        assert(xx == 0xEB);

        y : u8 = 0x6B;
        yy := cast(s16, y);
        assert(yy == 0x6B);
    }

    {
        x : u8 = 0xEB;
        xx := cast(s32, x);
        assert(xx == 0xEB);

        y : u8 = 0x6B;
        yy := cast(s32, y);
        assert(yy == 0x6B);
    }

    {
        x : u8 = 0xEB;
        xx := cast(s64, x);
        assert(xx == 0xEB);

        y : u8 = 0x6B;
        yy := cast(s64, y);
        assert(yy == 0x6B);
    }

    {
        x : u16 = 0xEAAB;
        xx := cast(s32, x);
        assert(xx == 0xEAAB);

        y : u16 = 0x6AAB;
        yy := cast(s32, y);
        assert(yy == 0x6AAB);
    }

    {
        x : u16 = 0xEAAB;
        xx := cast(s64, x);
        assert(xx == 0xEAAB);

        y : u16 = 0x6AAB;
        yy := cast(s64, y);
        assert(yy == 0x6AAB);
    }

    {
        x : u32 = 0xEAAAAAAB;
        xx := cast(s64, x);
        assert(xx == 0xEAAAAAAB);

        y : u32 = 0x6AAAAAAB;
        yy := cast(s64, y);
        assert(yy == 0x6AAAAAAB);
    }
}

unsigned_unsigned :: () {

    {
        x : u8 = 0xEB;
        xx := cast(u16, x);
        assert(xx == 0xEB);

        y : u8 = 0x6B;
        yy := cast(u16, y);
        assert(yy == 0x6B);
    }

    {
        x : u8 = 0xEB;
        xx := cast(u32, x);
        assert(xx == 0xEB);

        y : u8 = 0x6B;
        yy := cast(u32, y);
        assert(yy == 0x6B);
    }

    {
        x : u8 = 0xEB;
        xx := cast(u64, x);
        assert(xx == 0xEB);

        y : u8 = 0x6B;
        yy := cast(u64, y);
        assert(yy == 0x6B);
    }

    {
        x : u16 = 0xEAAB;
        xx := cast(u32, x);
        assert(xx == 0xEAAB);

        y : u16 = 0x6AAB;
        yy := cast(u32, y);
        assert(yy == 0x6AAB);
    }

    {
        x : u16 = 0xEAAB;
        xx := cast(u64, x);
        assert(xx == 0xEAAB);

        y : u16 = 0x6AAB;
        yy := cast(u64, y);
        assert(yy == 0x6AAB);
    }

    {
        x : u32 = 0xEAAAAAAB;
        xx := cast(u64, x);
        assert(xx == 0xEAAAAAAB);

        y : u32 = 0x6AAAAAAB;
        yy := cast(u64, y);
        assert(yy == 0x6AAAAAAB);
    }
}
